- summary: |
    Проверка регистрации нового пользователя 
  requirement: |
    Проверка создания нового пользователя
  prerequisites:
    Открыта страница "Sign up"
  test-data: |
    Nickname = Qudrat Email = qudrat.temury@gmail.com Password = Qudrat.123 Password Confirmation = Qudrat.123
  steps:
    - Вводим никнейм
    - Вводим почту
    - Вводим пароль
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь создается и открывается главная страница

- summary: |
    Проверка валидатора никнейма при регистрации 
  requirement: |
    При создании никнейма нужно использовать цифры, буквы и "_"
  prerequisites:
    Открыта страница "Sign up"
  test-data: |
    Nickname = Qudrat123! Email = qudrat.temury@gmail.com Password = Qudrat.123 Password Confirmation = Qudrat.123
  steps:
    - Вводим никнейм
    - Вводим почту
    - Вводим пароль
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователю выдается ошибка "Should contain Latin letters, numbers and underscores. Only begin with latin letter"

- summary: |
    Проверка валидатора почты при регистрации 
  requirement: |
    При создании аккаунта проверяется корректность почты
  prerequisites:
    Открыта страница "Sign up"
  test-data: |
    Nickname = Qudrat123! Email = qudrat@.comm Password = Qudrat.123 Password Confirmation = Qudrat.123
  steps:
    - Вводим никнейм
    - Вводим почту
    - Вводим пароль
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователю выдается ошибка "Invalid email"

- summary: |
    Проверка валидатора пароля при регистрации 
  requirement: |
    При создании аккаунта проверяется корректность почты. Не менее 6 символов и хотя бы 1 спец.символ
  prerequisites:
    Открыта страница "Sign up"
  test-data: |
    Nickname = Qudrat123! Email = qudrat@gmail.comm Password = Qudrat Password Confirmation = Qudrat
  steps:
    - Вводим никнейм
    - Вводим почту
    - Вводим пароль
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователю выдается ошибка "Should contain at least one special character"

- summary: |
    Проверка успешного входа пользователя
  requirement: |
    Проверка входа в свой аккаунт после его создания
  prerequisites:
    Открыта страница "Sign in"
  test-data: |
    Email = qudrat.temury@gmail.com  Пароль = Qudrat.123
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь переносится на главную страницу и получает уведомление "Successfully authenticated"

- summary: |
    Проверка входа пользователя с несуществующими логином/почтой
  requirement: |
    При вводе  несушествуюшего логина/почты пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница "Sign in"
    Есть пользователь с почтой tests@gmail.com
  test-data: |
    Email = tests@gmail.com  Пароль = badpass
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь получает ошибку "EMAIL_NOT_FOUND"

- summary: |
    Проверка входа пользователя с неверным паролем
  requirement: |
    При вводе неправильного пароля пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница "Sign in"
    Есть пользователь с почтой tests@gmail.com и паролем testpass
  test-data: |
    Email = tests@gmail.com  Пароль = badpass
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь получает ошибку "INVALID_PASSWORD"

- summary: |
    Попытка регистрации пользователя с занятой почтой
  requirement: |
    При попытке зарегестрировать нового пользователя занятой почтой должна произойти ошибка и  платформа должна об этом сообщить пользователю
  prerequisites:
    Открыта страница "Sign up"
  test-data: |
    Email = qudrat.temury@gmail.com  Пароль = badpass
  steps:
    - Вводим никнейм
    - Вводим почту
    - Вводим пароль
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь получает ошибку "Email is already taken"

- summary: |
    Проверка сброса и установления нового пароля
  requirement: |
    Платформа позволяет пользователю сбросить текущий пароль и установить новый
  prerequisites:
    Открыта страница "Sign in"
    Есть пользователь с почтой "qudrat@sms-man.com"
  test-data: |
    Email = qudrat@sms-man.com
  steps:
    - Нажимаем на кнопку "Forgot your password?"
    - Вводим почту qudrat@sms-man.com
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь получает сообщение что ему на почту была отправлена ссылка на сброс пароля

- summary: |
    Проверка создания игры
  requirement: |
    У пользователя есть возможность создать игру
  prerequisites:
    Пользователь авторизован
  test-data: |
    Level = 1 звезда Game Type = With a bot Time control = 8 min Choose task by name or tags = random task
  steps:
    - Нажимаем на кнопку Create a game
    - Выбираем сложность
    - Выбираем тип игры
    - Выбираем время 
    - Выбираем задачу
  expected-result: |
    Пользователь переносится на страницу с созданной игрой

- summary: |
    Проверка создания турнира
  requirement: |
    У пользователя есть возможность создать турнир
  prerequisites:
    Пользователь авторизован
    Открыта страница "Tournaments"
  test-data: |
    Nmae = First tournament Type = Individual Event = 1 
  steps:
    - Пролистываем до конца страницы
    - Заполняем поле "Name"
    - Выбираем тип
    - Заполняем поле "Event" 
    - Нажимаем на кнопку "Create"
  expected-result: |
    Пользователь переносится на страницу с созданным турниром

- summary: |
    Проверка победы в игре 
  requirement: |
    Пользователь после вступления в игру с другим игроком имеет возможность в ней победить
  prerequisites:
    Пользователь авторизован
    Пользователь вступил в игру с ранее выбраными условиями
  test-data: |
    Task = rect_area
  steps:
    - Запустить игру
    - Написать в "return" значение "width*length"
    - Нажать на кнопку "Run"
  expected-result: |
    Пользователь получает уведомление что победил

- summary: |
    Проверка добровольной сдачи в игре 
  requirement: |
    Пользователь после вступления в игру с другим игроком имеет возможность в ней сдаться
  prerequisites:
    Пользователь авторизован
    Пользователь вступил в игру с ранее выбраными условиями
  test-data: |
    Task = rect_area
  steps:
    - Запустить игру
    - Нажать на троеточие рядом с кнопкой "Run" 
    - Нажать на кнопку "Give up"
    - Подтвердить что сдается
  expected-result: |
    Пользователь получает уведомление что он проиграл

- summary: |
    Проверка обнуления таймера в игре 
  requirement: |
    Игра автоматически заканчивается, если время отведенное на выполнения задание закончилось
  prerequisites:
    Пользователь авторизован
    Пользователь вступил в игру с ранее выбраными условиями
  test-data: |
    Task = rect_area
  steps:
    - Запустить игру
    - Ждать окончания таймера
  expected-result: |
    Пользователь получит уведомление что время закончилось и нету победителя в этой игре

- summary: |
    Проверка компиляции неверного кода 
  requirement: |
    При попытке компиляции неверного кода, платформа после нажатия на кнопку "Run" выдает ошибку 
  prerequisites:
    Пользователь авторизован
    Пользователь вступил в игру с ранее выбраными условиями
  test-data: |
    любая задача
  steps:
    - Запустить игру
    - Ввести любые значения в редактор
    - Нажать на кнопку "Run"
  expected-result: |
    Пользователь получит уведомление что произошел сбой при комплияции кода

- summary: |
    Проверка выбора и сохранения ЯП 
  requirement: |
    В настройках аккаунта можно выбрать ЯП для игр, в которые хочется вступить
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: |
    Your weapon = python
  steps:
    - Нажать на иконку аккаунта
    - Нажать на кнопку "Settings"
    - Выбрать любой язык из списка "Your weapon"
    - Нажать на "Save"
  expected-result: |
    Выбранный ЯП сохранен

- summary: |
    Проверка успешной регистрации через Github
  requirement: |
    Проверка авторизации нового пользователя через Github
  prerequisites:
    Открыта страница "Sign in"
  test-data: |
    Email = qudrat@sms-man.com  Пароль = Qudrat.123
  steps:
    - Нажимаем на кнопку "Sign in with Github"
    - Вводим логин от своего аккаунта на Github
    - Вводим пароль
    - Нажимаем кнопку «Sign In»
  expected-result: |
    Пользователь переносится на главную страницу Hexlet Codebattle и получает уведомление "Successfully authenticated"

- summary: |
    Проверка успешной регистрации через Discord
  requirement: |
    Проверка авторизации нового пользователя через Discord
  prerequisites:
    Открыта страница "Sign in"
  test-data: |
    Email = qudrat@sms-man.com  Пароль = Qudrat.123
  steps:
    - Нажимаем на кнопку "Sign in with Discord"
    - Вводим логин от своего аккаунта на Discord
    - Вводим пароль
    - Нажимаем на кнопку "Авторизовать"
  expected-result: |
    Пользователь переносится на главную страницу Hexlet Codebattle и получает уведомление "Successfully authenticated"

- summary: |
    Проверка просмотра профиля другого игрока
  requirement: |
    Платформа позволяет проверить профиль другого игрока
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: |
    Любой игрок в сети из списка 
  steps:
    - Нажимаем на никнейм игрока
    - Нажимаем на кнопку "Info"
  expected-result: |
    Открывается профиль выбранного игрока и показывается его статистика

- summary: |
    Проверка отправления личного сообщения другому игроку
  requirement: |
    Платформа позволяет отправлять личные сообщения другому игроку
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: |
    Любой игрок в сети из списка 
  steps:
    - Нажимаем на никнейм игрока
    - Нажимаем на кнопку "Direct message"
  expected-result: |
    Пользователь с общего чата переходит на личный чат с выбранным игроком

- summary: |
    Проверка функции "Follow" другого игрока
  requirement: |
    Платформа позволяет наблюдать за другим игроком
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: |
    Любой игрок в сети из списка 
  steps:
    - Нажимаем на никнейм игрока
    - Нажимаем на кнопку "Follow"
  expected-result: |
    Пользователь получает уведомление что на данный момент наблюдает за другим игроком

- summary: |
    Проверка функции "Invite" 
  requirement: |
    Платформа позволяет пригласить другого игрока в игру
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: |
    Любой игрок в сети из списка 
  steps:
    - Нажимаем на никнейм игрока
    - Нажимаем на кнопку "Invite"
  expected-result: |
    Создается игра, в которой игрок отправивший приглашени ждет пока приглашенный игрок в неё вступит

- summary: |
    Проверка привзяки аккаунта Github на созданный аккаунт в codebattle
  requirement: |
    Платформа позволяет привязать свой аккаунт в Github к аккаунту 
  prerequisites:
    Пользователь авторизован
    Открыта страница "Settings"
  test-data: |
    Сушествуюший аккаунт в Github 
  steps:
    - Нажимаем на кнопку "Link Github"
    - Введите данные своей учетной записи в Github
    - Нажмите на кнопку "Sign In"
  expected-result: |
    Аккаунта в Github привязан к аккаунту в codebattle

- summary: |
    Проверка привзяки аккаунта Discord на созданный аккаунт в codebattle
  requirement: |
    Платформа позволяет привязать свой аккаунт в Github к аккаунту 
  prerequisites:
    Пользователь авторизован
    Открыта страница "Settings"
  test-data: |
    Сушествуюший аккаунт в Github 
  steps:
    - Нажимаем на кнопку "Link Github"
    - Введите данные своей учетной записи в Github
    - Нажмите на кнопку "Authorise"
  expected-result: |
    Аккаунта в Discord привязан к аккаунту в codebattle

- summary: |
    Проверка создания собственного клана
  requirement: |
    В настройках аккаунта можно создать свой клан
  prerequisites:
    Пользователь авторизован
    Открыта страница "Settings"
  test-data: | 
    Your clan = test1 
  steps:
    - Введите имя клана в поле "Your clan"
    - Нажмите на кнопку "Save"
  expected-result: |
    Создается клан с выбранным названием
    
- summary: |
    Проверка страницы "My profile"  
  requirement: |
    При помощи "My Profile" пользователь может посмотреть информацию о своем аккаунте
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: | 
    Любой аккаунт, в котором сыграно пару игр
  steps:
    - Нажать на свой никнейм
    - Нажать на "My Profile"
  expected-result: |
    Пользователю предоставляется страница с информацией об игроке

- summary: |
    Проверка редактирования имени в "Settings"  
  requirement: |
    При клике на свой никнейм пользователь может посмотреть информацю о своем аккаунте при помощи "My Profile"
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: | 
    Your name = test123
  steps:
    - Нажать на свой никнейм
    - Нажать на "Settings"
    - В поле "Your name" вводим новое имя
    - Нажимаем на "Save"
  expected-result: |
    Имя пользователя поменялось на новое

- summary: |
    Проверка рейтинга пользователей  
  requirement: |
    При клике на свой никнейм пользователь может посмотреть информацю о рейтинге пользователей в "User rating"
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data: | 
    Любой существующий аккаунт в codebattle
  steps:
    - Нажать на свой никнейм
    - Нажать на "User rating"
  expected-result: |
    Пользователю выдается список с пользователями и их рейтинги

- summary: |
    Проверка поиска пользователя в "Users rating"  
  requirement: |
    На странице "Users rating" есть возможность поиска пользователя
  prerequisites:
    Пользователь авторизован
    Открыта страница "Users rating"
  test-data: | 
    Пользователь tyrkinn
  steps:
    - Ввести никнейм в поле поиска
  expected-result: |
    Пользователю выдается пользователь с именем tyrkinn
